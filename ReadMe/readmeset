
This project deployed a microservices-based application using Jenkins  CI/CD pipeline by use of  terraform to ensure quick, reliable, and secure deployment on Kubernetes. By focusing on Infrastructure as Code, Using terraform to create a reproducible and maintainable deployment process that leverages modern DevOps practices and tools.

#  Capstone CI/CD Architecture
----


[Cicd-art.png](updated-sock-shop-main\ReadMe\Cicd-art.png)
![cicd-art](image.png)



#    Requirements

1 . A cloud Account
 
2 . A key pair 

3 . Security group 

4 . github account

# setup
 These are the files we will be running.

![sock shop build](image-3.png)

Create an account on your cloud provider
create an Ec2 instance t2medium or larger
Connect to it 
clone the github repo (git clone https://github.com/Olaalt/updated-sock-shop-main.git  name of a folder )  
**cd** into the folder that was named 
Make the installer.sh file executable **(chmod +x installer.sh)**
Run the installer.sh file **(./installer.sh)**
acknowledge all prompts @ th end will see this page
 ![installer.sh end](image-5.png) press ctrl + c then y
Cut and pase the admin password
  # setting up Jenkins
   ![setting up Jenkins](image-4.png)
  setting up a jenkins administrator account
run this command to see Jenkins password copy and pase id in the panel click continue.
![Jenkins user acc](image-6.png)
this is the next screen which is use to set up the user acc to log into the Jenkins server **please save credentials** 

![Jenkins plugins](image-13.png)

go to settings and enable 
## Set up Jenkins access to Github & AWS ##
![Jenkins dash bard](image-7.png)
go to global  to set up the keys jenkins will need to get into your Github acc,and AWS acc
![Github aut setup ](image-8.png)
setup AWS access for jenkins access key ID and secret key ID
![access key ID](image-9.png)

![Keys setup for jenkins access](image-12.png)

## setting up two pipeline ##
A pipe line for **cluster-jenkinsfile & for jenkins file**
Select new item 
![Jenkins dashboard](image-11.png)
Name the pipe line
![setting up a pipeline](image-10.png)
![ step 2 in pipeline setup](image-14.png)

After Deploy is completed

# Route 53 #

open route 53 i aws console and copy the sever name from the route5 3to your domain provide and save it.

## Viewing Grapfana  and sock shop on browser ##

Copy the grafana and sock-shop URL with the domain name in the browser to see the default page